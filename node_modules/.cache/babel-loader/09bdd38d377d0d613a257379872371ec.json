{"ast":null,"code":"var _jsxFileName = \"/home/alta5/Documents/GIT-PROJ/react-project-w7/recipe_com/src/pages/recipe.jsx\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"unistore/react\";\nimport { actions } from \"../store/store\";\nimport '../style/bootstrap.min.css';\nimport '../style/home.css';\n\nclass Recipe extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      const index = await this.props.match.params.index;\n      const listRecipe = await this.props.listRecipe;\n      const currentRecipe = listRecipe[index];\n      console.log(currentRecipe);\n      this.props.setChange('data', currentRecipe);\n    };\n  }\n\n  render() {\n    const recipe = this.props.data;\n\n    if (recipe !== undefined) {\n      console.log(recipe);\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), recipe !== undefined ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: recipe,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(\"listRecipe, data\", actions)(withRouter(Recipe));","map":{"version":3,"sources":["/home/alta5/Documents/GIT-PROJ/react-project-w7/recipe_com/src/pages/recipe.jsx"],"names":["React","Header","withRouter","Link","connect","actions","Recipe","Component","componentDidMount","index","props","match","params","listRecipe","currentRecipe","console","log","setChange","render","recipe","data","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAO,4BAAP;AACA,OAAO,mBAAP;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAoC;AAAA;AAAA;;AAAA,SAChCC,iBADgC,GACZ,YAAY;AAC5B,YAAMC,KAAK,GAAG,MAAM,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,KAA5C;AACA,YAAMI,UAAU,GAAG,MAAM,KAAKH,KAAL,CAAWG,UAApC;AACA,YAAMC,aAAa,GAAGD,UAAU,CAACJ,KAAD,CAAhC;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,WAAKJ,KAAL,CAAWO,SAAX,CAAqB,MAArB,EAA6BH,aAA7B;AACH,KAP+B;AAAA;;AAShCI,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,KAAKT,KAAL,CAAWU,IAA1B;;AACA,QAAGD,MAAM,KAAGE,SAAZ,EAAsB;AAClBN,MAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACH;;AACD,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKA,MAAM,KAAGE,SAAT,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEF,MAAV;AAAkB,MAAA,GAAG,EAAC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADC,GAKD,IAPJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ;AAeH;;AA7B+B;;AAgCpC,eAAef,OAAO,CAAC,kBAAD,EAAqBC,OAArB,CAAP,CAAqCH,UAAU,CAACI,MAAD,CAA/C,CAAf","sourcesContent":["import React from 'react';\nimport Header from '../components/Header'; \nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"unistore/react\";\nimport { actions } from \"../store/store\";\nimport '../style/bootstrap.min.css'\nimport '../style/home.css'\n\nclass Recipe extends React.Component{\n    componentDidMount = async () => {\n        const index = await this.props.match.params.index;\n        const listRecipe = await this.props.listRecipe;\n        const currentRecipe = listRecipe[index];\n        console.log(currentRecipe)\n        this.props.setChange('data', currentRecipe)\n    }\n\n    render() {\n        const recipe = this.props.data\n        if(recipe!==undefined){\n            console.log(recipe)\n        }\n        return(\n            <React.Fragment>\n                <Header/>\n                {recipe!==undefined?\n                <div>\n                    <img src={recipe} alt=\"\"/>\n                </div>\n                :\n                null\n                }\n                <div>\n                    \n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default connect(\"listRecipe, data\", actions)(withRouter(Recipe))"]},"metadata":{},"sourceType":"module"}