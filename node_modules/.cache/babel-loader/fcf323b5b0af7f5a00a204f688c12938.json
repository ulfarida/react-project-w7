{"ast":null,"code":"import createStore from 'unistore';\nimport axios from 'axios';\nconst initialState = {\n  fullname: '',\n  username: '',\n  password: '',\n  email: '',\n  token: '',\n  auth: false,\n  profilePicture: '',\n  search: '',\n  listRecipe: [],\n  isLoading: true,\n  data: {},\n  recipeData: {},\n  selectedNutritiens: '',\n  category: ''\n};\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  setInput: (state, event) => {\n    console.log(event.target.name, event.target.value);\n    store.setState({\n      [event.target.name]: event.target.value\n    });\n  },\n  setChange: (state, key, value) => {\n    store.setState({\n      [key]: value\n    });\n  },\n  setManyChanges: (state, dict) => {\n    store.setState(dict);\n  },\n  handleGetApi: async (state, urlHeadLine) => {\n    await axios.get(urlHeadLine).then(async response => {\n      await store.setState({\n        data: response.data\n      });\n    }).catch(error => {\n      console.warn(error);\n    });\n  }\n});","map":{"version":3,"sources":["/home/alta5/Documents/GIT-PROJ/react-project-w7/recipe_com/src/store/store.js"],"names":["createStore","axios","initialState","fullname","username","password","email","token","auth","profilePicture","search","listRecipe","isLoading","data","recipeData","selectedNutritiens","category","store","actions","setInput","state","event","console","log","target","name","value","setState","setChange","key","setManyChanges","dict","handleGetApi","urlHeadLine","get","then","response","catch","error","warn"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACLC,EAAAA,QAAQ,EAAE,EADL;AAELC,EAAAA,QAAQ,EAAG,EAFN;AAGLC,EAAAA,QAAQ,EAAG,EAHN;AAILC,EAAAA,KAAK,EAAG,EAJH;AAKLC,EAAAA,KAAK,EAAG,EALH;AAMLC,EAAAA,IAAI,EAAG,KANF;AAOLC,EAAAA,cAAc,EAAG,EAPZ;AAQLC,EAAAA,MAAM,EAAE,EARH;AASLC,EAAAA,UAAU,EAAE,EATP;AAULC,EAAAA,SAAS,EAAE,IAVN;AAWLC,EAAAA,IAAI,EAAE,EAXD;AAYLC,EAAAA,UAAU,EAAE,EAZP;AAaLC,EAAAA,kBAAkB,EAAG,EAbhB;AAcLC,EAAAA,QAAQ,EAAG;AAdN,CAArB;AAiBA,OAAO,MAAMC,KAAK,GAAGjB,WAAW,CAACE,YAAD,CAAzB;AAEP,OAAO,MAAMgB,OAAO,GAAGD,KAAK,KAAK;AAC7BE,EAAAA,QAAQ,EAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,IAAzB,EAA+BJ,KAAK,CAACG,MAAN,CAAaE,KAA5C;AACAT,IAAAA,KAAK,CAACU,QAAN,CAAe;AAAE,OAACN,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAsBJ,KAAK,CAACG,MAAN,CAAaE;AAArC,KAAf;AACH,GAJ4B;AAK7BE,EAAAA,SAAS,EAAE,CAACR,KAAD,EAAQS,GAAR,EAAaH,KAAb,KAAuB;AAC9BT,IAAAA,KAAK,CAACU,QAAN,CAAe;AAAC,OAACE,GAAD,GAAOH;AAAR,KAAf;AACH,GAP4B;AAQ7BI,EAAAA,cAAc,EAAE,CAACV,KAAD,EAAQW,IAAR,KAAiB;AAC7Bd,IAAAA,KAAK,CAACU,QAAN,CAAeI,IAAf;AACH,GAV4B;AAY7BC,EAAAA,YAAY,EAAE,OAAOZ,KAAP,EAAca,WAAd,KAA8B;AACxC,UAAMhC,KAAK,CACViC,GADK,CACDD,WADC,EAELE,IAFK,CAEA,MAAOC,QAAP,IAAoB;AACtB,YAAMnB,KAAK,CAACU,QAAN,CAAe;AAACd,QAAAA,IAAI,EAAEuB,QAAQ,CAACvB;AAAhB,OAAf,CAAN;AACH,KAJK,EAKLwB,KALK,CAKEC,KAAD,IAAW;AACdhB,MAAAA,OAAO,CAACiB,IAAR,CAAaD,KAAb;AACH,KAPK,CAAN;AAQH;AArB4B,CAAL,CAArB","sourcesContent":["import createStore from 'unistore';\nimport axios from 'axios';\n\nconst initialState = { \n                fullname :'',\n                username : '',\n                password : '',\n                email : '',\n                token : '',\n                auth : false,\n                profilePicture : '',\n                search: '',\n                listRecipe: [],\n                isLoading: true,\n                data: {},\n                recipeData: {},\n                selectedNutritiens : '',\n                category : ''\n                };\n\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n    setInput : (state, event) => {\n        console.log(event.target.name, event.target.value)\n        store.setState({ [event.target.name] : event.target.value })\n    }, \n    setChange: (state, key, value) => {\n        store.setState({[key]: value});\n    },\n    setManyChanges: (state, dict) => {\n        store.setState(dict)\n    },\n\n    handleGetApi: async (state, urlHeadLine) => {\n        await axios\n        .get(urlHeadLine)\n        .then(async (response) => {\n            await store.setState({data: response.data})\n        })\n        .catch((error) => {\n            console.warn(error)\n        })\n    }\n})"]},"metadata":{},"sourceType":"module"}