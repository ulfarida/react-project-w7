{"ast":null,"code":"var _jsxFileName = \"/home/alta5/Documents/GIT-PROJ/react-project-w7/recipe_com/src/pages/recipeAnalysis.jsx\";\nimport React, { Component } from 'react';\nimport Header from \"../components/Header\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"unistore/react\";\nimport { actions, store } from \"../store/store\";\nimport axios from \"axios\";\nimport '../style/recipeAnalysis.css';\nimport logo from \"../images/logo-orange.svg\";\n\nclass RecipeAnalysis extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.nutritionGetApi = () => {\n      const self = this; // format input ingredients for api\n\n      const input = {\n        ingr: this.props.ingredients.split(',')\n      };\n      console.log('cek input', input);\n      axios.post(\"https://api.edamam.com/api/nutrition-details?app_id=8615d785&app_key=7fa308a07eadeecabb5e58925396a331\", input).then(async function (response) {\n        console.log('cek response sblm if', response);\n\n        if (response.data.hasOwnProperty(\"calories\")) {\n          console.log('props masuk if axios', self.props);\n          console.log('cek response', response.data.calories);\n          console.log('cek total nutri', response.data.totalNutrients);\n          await store.setState({\n            calories: response.data.calories\n          });\n          const totalNutrients = response.data.totalNutrients;\n          const selectedNutritiensData = {\n            [totalNutrients.ENERC_KCAL.label]: Math.round(totalNutrients.ENERC_KCAL.quantity) + ' ' + totalNutrients.ENERC_KCAL.unit,\n            [totalNutrients.CHOLE.label]: Math.round(totalNutrients.CHOLE.quantity) + ' ' + totalNutrients.CHOLE.unit,\n            [totalNutrients.FAT.label]: Math.round(totalNutrients.FAT.quantity) + ' ' + totalNutrients.FAT.unit,\n            [totalNutrients.PROCNT.label]: Math.round(totalNutrients.PROCNT.quantity) + ' ' + totalNutrients.PROCNT.unit\n          };\n          console.log('cek sesuatu', selectedNutritiensData);\n          store.setState({\n            selectedNutritiens: selectedNutritiensData\n          });\n        }\n      }).catch(function (error) {\n        console.log(error); // if error show to user try agian\n\n        store.setState({\n          calories: 'try again'\n        });\n      });\n    };\n  }\n\n  render() {\n    console.log('this props selectedNutritiens', this.props.selectedNutritiens);\n\n    if (this.props.auth == false) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/login'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"\",\n        method: \"\",\n        onSubmit: e => e.preventDefault(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"input-ing text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Input Ingredients\"), React.createElement(\"textarea\", {\n        class: \"form-control rounded-0\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"6\",\n        placeholder: \"ingredients separate with comma (,)\",\n        name: \"ingredients\",\n        onChange: e => this.props.setInput(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-info btn-block login\",\n        type: \"submit\",\n        onClick: () => this.nutritionGetApi(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Analyze your meal\"))))), React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 col-sm-12 mt-5 mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper-anlyzeresult d-flex flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"calories ml-3\",\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Energy :\"), React.createElement(\"div\", {\n        className: \"calories ml-3\",\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.props.selectedNutritiens.Energy)), React.createElement(\"div\", {\n        className: \"wrapper-anlyzeresult d-flex flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"calories ml-3\",\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Cholesterol :\"), React.createElement(\"div\", {\n        className: \"calories ml-3\",\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.props.selectedNutritiens.Cholesterol)), React.createElement(\"div\", {\n        className: \"wrapper-anlyzeresult d-flex flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"calories ml-3\",\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Fat :\"), React.createElement(\"div\", {\n        className: \"calories ml-3\",\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.selectedNutritiens.Fat)), React.createElement(\"div\", {\n        className: \"wrapper-anlyzeresult d-flex flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"calories ml-3\",\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Protein :\"), React.createElement(\"div\", {\n        className: \"calories ml-3\",\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.props.selectedNutritiens.Protein))))));\n    }\n  }\n\n}\n\nexport default connect(\"selectedNutritiens, ingredients, calories, sesuatu\", actions)(withRouter(RecipeAnalysis));","map":{"version":3,"sources":["/home/alta5/Documents/GIT-PROJ/react-project-w7/recipe_com/src/pages/recipeAnalysis.jsx"],"names":["React","Component","Header","withRouter","connect","actions","store","axios","RecipeAnalysis","nutritionGetApi","self","input","ingr","props","ingredients","split","console","log","post","then","response","data","hasOwnProperty","calories","totalNutrients","setState","selectedNutritiensData","ENERC_KCAL","label","Math","round","quantity","unit","CHOLE","FAT","PROCNT","selectedNutritiens","catch","error","render","auth","pathname","e","preventDefault","setInput","fontSize","Energy","Cholesterol","Fat","Protein"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,gBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;;;AAKA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAEnCQ,eAFmC,GAEjB,MAAM;AACpB,YAAMC,IAAI,GAAG,IAAb,CADoB,CAEpB;;AACA,YAAMC,KAAK,GAAG;AACVC,QAAAA,IAAI,EAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,KAAvB,CAA6B,GAA7B;AADG,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBN,KAAxB;AACAJ,MAAAA,KAAK,CACAW,IADL,CACU,uGADV,EACmHP,KADnH,EAEKQ,IAFL,CAEU,gBAAeC,QAAf,EAAyB;AAC3BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCG,QAAnC;;AACA,YAAGA,QAAQ,CAACC,IAAT,CAAcC,cAAd,CAA6B,UAA7B,CAAH,EAA6C;AACzCN,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCP,IAAI,CAACG,KAAxC;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BG,QAAQ,CAACC,IAAT,CAAcE,QAAzC;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BG,QAAQ,CAACC,IAAT,CAAcG,cAA5C;AACA,gBAAMlB,KAAK,CAACmB,QAAN,CAAe;AAACF,YAAAA,QAAQ,EAAGH,QAAQ,CAACC,IAAT,CAAcE;AAA1B,WAAf,CAAN;AACA,gBAAMC,cAAc,GAAIJ,QAAQ,CAACC,IAAT,CAAcG,cAAtC;AAEA,gBAAME,sBAAsB,GAAG;AAC3B,aAACF,cAAc,CAACG,UAAf,CAA0BC,KAA3B,GAAqCC,IAAI,CAACC,KAAL,CAAWN,cAAc,CAACG,UAAf,CAA0BI,QAArC,IAA+C,GAA/C,GAAmDP,cAAc,CAACG,UAAf,CAA0BK,IADvF;AAE3B,aAACR,cAAc,CAACS,KAAf,CAAqBL,KAAtB,GAAgCC,IAAI,CAACC,KAAL,CAAWN,cAAc,CAACS,KAAf,CAAqBF,QAAhC,IAA0C,GAA1C,GAA8CP,cAAc,CAACS,KAAf,CAAqBD,IAFxE;AAG3B,aAACR,cAAc,CAACU,GAAf,CAAmBN,KAApB,GAA8BC,IAAI,CAACC,KAAL,CAAWN,cAAc,CAACU,GAAf,CAAmBH,QAA9B,IAAwC,GAAxC,GAA4CP,cAAc,CAACU,GAAf,CAAmBF,IAHlE;AAI3B,aAACR,cAAc,CAACW,MAAf,CAAsBP,KAAvB,GAAiCC,IAAI,CAACC,KAAL,CAAWN,cAAc,CAACW,MAAf,CAAsBJ,QAAjC,IAA2C,GAA3C,GAA+CP,cAAc,CAACW,MAAf,CAAsBH;AAJ3E,WAA/B;AAOAhB,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BS,sBAA1B;AACApB,UAAAA,KAAK,CAACmB,QAAN,CAAe;AAACW,YAAAA,kBAAkB,EAAEV;AAArB,WAAf;AACC;AACJ,OArBT,EAwBKW,KAxBL,CAwBW,UAASC,KAAT,EAAgB;AACnBtB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,KAAZ,EADmB,CAEnB;;AACAhC,QAAAA,KAAK,CAACmB,QAAN,CAAe;AAACF,UAAAA,QAAQ,EAAG;AAAZ,SAAf;AACH,OA5BL;AA6BC,KAtC8B;AAAA;;AAuCnCgB,EAAAA,MAAM,GAAG;AACLvB,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4C,KAAKJ,KAAL,CAAWuB,kBAAvD;;AACA,QAAG,KAAKvB,KAAL,CAAW2B,IAAX,IAAiB,KAApB,EAA0B;AACtB,aACI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAACC,UAAAA,QAAQ,EAAC;AAAV,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,MAIM;AACF,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,MAAM,EAAC,EAAvB;AAA0B,QAAA,QAAQ,EAAEC,CAAC,IAAIA,CAAC,CAACC,cAAF,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAU,QAAA,KAAK,EAAC,wBAAhB;AAAyC,QAAA,EAAE,EAAC,6BAA5C;AAA0E,QAAA,IAAI,EAAC,GAA/E;AAAmF,QAAA,WAAW,EAAC,qCAA/F;AAAqI,QAAA,IAAI,EAAC,aAA1I;AAAwJ,QAAA,QAAQ,EAAED,CAAC,IAAI,KAAK7B,KAAL,CAAW+B,QAAX,CAAoBF,CAApB,CAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI;AAAQ,QAAA,SAAS,EAAC,8BAAlB;AAAiD,QAAA,IAAI,EAAC,QAAtD;AAA+D,QAAA,OAAO,EAAE,MAAM,KAAKjC,eAAL,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALJ,CADJ,CADJ,CADJ,CADJ,EAcI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAACoC,UAAAA,QAAQ,EAAC;AAAV,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAACA,UAAAA,QAAQ,EAAC;AAAV,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0D,KAAKhC,KAAL,CAAWuB,kBAAX,CAA8BU,MAAxF,CAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAACD,UAAAA,QAAQ,EAAC;AAAV,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAACA,UAAAA,QAAQ,EAAC;AAAV,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0D,KAAKhC,KAAL,CAAWuB,kBAAX,CAA8BW,WAAxF,CAFJ,CALJ,EASI;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAACF,UAAAA,QAAQ,EAAC;AAAV,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAACA,UAAAA,QAAQ,EAAC;AAAV,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0D,KAAKhC,KAAL,CAAWuB,kBAAX,CAA8BY,GAAxF,CAFJ,CATJ,EAaI;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAACH,UAAAA,QAAQ,EAAC;AAAV,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAACA,UAAAA,QAAQ,EAAC;AAAV,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0D,KAAKhC,KAAL,CAAWuB,kBAAX,CAA8Ba,OAAxF,CAFJ,CAbJ,CADJ,CAdJ,CAFJ,CADJ;AAwCH;AACJ;;AAvFkC;;AA0FvC,eAAe7C,OAAO,CAAC,oDAAD,EAAuDC,OAAvD,CAAP,CAAuEF,UAAU,CAACK,cAAD,CAAjF,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from \"../components/Header\"\nimport { withRouter } from 'react-router-dom'\nimport { connect } from \"unistore/react\";\nimport { actions, store } from \"../store/store\";\nimport axios from \"axios\"\nimport '../style/recipeAnalysis.css'\nimport logo from '../images/logo-orange.svg'\n\n\n\nclass RecipeAnalysis extends Component {\n    // input ingredients json body, method post\n    nutritionGetApi = () => {\n        const self = this\n        // format input ingredients for api\n        const input = {\n            ingr : this.props.ingredients.split(',')\n        }\n        console.log('cek input',input)\n        axios\n            .post(\"https://api.edamam.com/api/nutrition-details?app_id=8615d785&app_key=7fa308a07eadeecabb5e58925396a331\", input)\n            .then(async function(response) {\n                console.log('cek response sblm if',response)\n                if(response.data.hasOwnProperty(\"calories\")) {\n                    console.log('props masuk if axios',self.props)\n                    console.log('cek response',response.data.calories)\n                    console.log('cek total nutri',response.data.totalNutrients)\n                    await store.setState({calories : response.data.calories})\n                    const totalNutrients =  response.data.totalNutrients\n\n                    const selectedNutritiensData = {\n                        [totalNutrients.ENERC_KCAL.label] :  Math.round(totalNutrients.ENERC_KCAL.quantity)+' '+totalNutrients.ENERC_KCAL.unit,\n                        [totalNutrients.CHOLE.label] :  Math.round(totalNutrients.CHOLE.quantity)+' '+totalNutrients.CHOLE.unit,\n                        [totalNutrients.FAT.label] :  Math.round(totalNutrients.FAT.quantity)+' '+totalNutrients.FAT.unit,\n                        [totalNutrients.PROCNT.label] :  Math.round(totalNutrients.PROCNT.quantity)+' '+totalNutrients.PROCNT.unit\n                        }\n\n                    console.log('cek sesuatu',selectedNutritiensData)\n                    store.setState({selectedNutritiens: selectedNutritiensData})\n                    }\n                }\n                \n            )\n            .catch(function(error) {\n                console.log(error)\n                // if error show to user try agian\n                store.setState({calories : 'try again'})\n            })\n        }\n    render() {\n        console.log('this props selectedNutritiens',this.props.selectedNutritiens)\n        if(this.props.auth==false){\n            return(\n                <Redirect to={{pathname:'/login'}}/>\n            )\n        } else{\n            return (\n                <React.Fragment>\n                    <Header/>\n                    <div className=\"container\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-md-8 col-sm-12\">\n                                <div className=\"form-box\">\n                                    <form action=\"\" method=\"\" onSubmit={e => e.preventDefault()}>\n                                        <div class=\"form-group\">\n                                            <h2 className=\"input-ing text-center\">Input Ingredients</h2>\n                                            <textarea class=\"form-control rounded-0\" id=\"exampleFormControlTextarea1\" rows=\"6\" placeholder=\"ingredients separate with comma (,)\" name=\"ingredients\" onChange={e => this.props.setInput(e)}></textarea>\n                                        </div>\n                                        <button className=\"btn btn-info btn-block login\" type=\"submit\" onClick={() => this.nutritionGetApi()}>Analyze your meal</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-md-8 col-sm-12 mt-5 mb-5\">\n                                <div className=\"wrapper-anlyzeresult d-flex flex-row\">\n                                    <div className=\"calories ml-3\" style={{fontSize:'20px'}}>Energy :</div>\n                                    <div className=\"calories ml-3\" style={{fontSize:'20px'}}>{this.props.selectedNutritiens.Energy}</div>\n                                </div>\n                                <div className=\"wrapper-anlyzeresult d-flex flex-row\">\n                                    <div className=\"calories ml-3\" style={{fontSize:'20px'}}>Cholesterol :</div>\n                                    <div className=\"calories ml-3\" style={{fontSize:'20px'}}>{this.props.selectedNutritiens.Cholesterol}</div>\n                                </div>\n                                <div className=\"wrapper-anlyzeresult d-flex flex-row\">\n                                    <div className=\"calories ml-3\" style={{fontSize:'20px'}}>Fat :</div>\n                                    <div className=\"calories ml-3\" style={{fontSize:'20px'}}>{this.props.selectedNutritiens.Fat}</div>\n                                </div>\n                                <div className=\"wrapper-anlyzeresult d-flex flex-row\">\n                                    <div className=\"calories ml-3\" style={{fontSize:'20px'}}>Protein :</div>\n                                    <div className=\"calories ml-3\" style={{fontSize:'20px'}}>{this.props.selectedNutritiens.Protein}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n}\n\nexport default connect(\"selectedNutritiens, ingredients, calories, sesuatu\", actions)(withRouter(RecipeAnalysis));\n"]},"metadata":{},"sourceType":"module"}